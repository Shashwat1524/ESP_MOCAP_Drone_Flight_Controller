[0/2] Re-checking globbed directories...
[1/10] Performing build step for 'bootloader'
[1/1] cd /home/shashwat/drone_flight_control/build/bootloader/esp-idf/esptool_py && /home/shashwat/.espressif/python_env/idf5.3_py3.10_env/bin/python /home/shashwat/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/shashwat/drone_flight_control/build/bootloader/bootloader.bin
Bootloader binary size 0x6850 bytes. 0x7b0 bytes (7%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/drone_flight_control.c.obj
[3/8] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/mocap.cpp.obj
/home/shashwat/drone_flight_control/main/mocap.cpp:26: warning: "RCCHECK" redefined
   26 | #define RCCHECK(fn)                  \
      | 
In file included from /home/shashwat/drone_flight_control/main/mocap.cpp:12:
/home/shashwat/drone_flight_control/main/mocap.h:26: note: this is the location of the previous definition
   26 | #define RCCHECK(fn) { rcl_ret_t temp_rc = fn; if((temp_rc != RCL_RET_OK)){printf("Failed status on line %d: %d. Aborting.\n",__LINE__,(int)temp_rc);vTaskDelete(NULL);}}
      | 
/home/shashwat/drone_flight_control/main/mocap.cpp:36: warning: "RCSOFTCHECK" redefined
   36 | #define RCSOFTCHECK(fn)                  \
      | 
/home/shashwat/drone_flight_control/main/mocap.h:27: note: this is the location of the previous definition
   27 | #define RCSOFTCHECK(fn) { rcl_ret_t temp_rc = fn; if((temp_rc != RCL_RET_OK)){printf("Failed status on line %d: %d. Continuing.\n",__LINE__,(int)temp_rc);vTaskDelete(NULL);}}
      | 
[4/8] Linking C static library esp-idf/main/libmain.a
[5/8] Generating ld/sections.ld
[6/8] Linking CXX executable drone_flight_control.elf
[7/8] Generating binary image from built executable
esptool.py vv4.8.dev1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/shashwat/drone_flight_control/build/drone_flight_control.bin
[8/8] cd /home/shashwat/drone_flight_control/build/esp-idf/esptool_py && /home/shashwat/.espressif/python_env/idf5.3_py3.10_env/bin/python /home/shashwat/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/shashwat/drone_flight_control/build/partition_table/partition-table.bin /home/shashwat/drone_flight_control/build/drone_flight_control.bin
drone_flight_control.bin binary size 0xe2bd0 bytes. Smallest app partition is 0x100000 bytes. 0x1d430 bytes (11%) free.
