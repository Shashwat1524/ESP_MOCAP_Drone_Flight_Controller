[0/2] Re-checking globbed directories...
[1/10] Performing build step for 'bootloader'
[1/1] cd /home/shashwat/drone_flight_control/build/bootloader/esp-idf/esptool_py && /home/shashwat/.espressif/python_env/idf5.3_py3.10_env/bin/python /home/shashwat/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/shashwat/drone_flight_control/build/bootloader/bootloader.bin
Bootloader binary size 0x6850 bytes. 0x7b0 bytes (7%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/mocap.c.obj
/home/shashwat/drone_flight_control/main/mocap.c: In function 'micro_ros_task':
/home/shashwat/drone_flight_control/main/mocap.c:94:79: warning: passing argument 4 of 'rclc_executor_add_subscription' from incompatible pointer type [-Wincompatible-pointer-types]
   94 |     RCCHECK(rclc_executor_add_subscription(&executor, &subscriber, &recv_msg, &subscription_callback, ON_NEW_DATA));
      |                                                                               ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                               |
      |                                                                               void (*)(const phasespace_msgs__msg__Rigids *)
/home/shashwat/drone_flight_control/main/mocap.c:23:43: note: in definition of macro 'RCCHECK'
   23 | #define RCCHECK(fn) { rcl_ret_t temp_rc = fn; if((temp_rc != RCL_RET_OK)){printf("Failed status on line %d: %d. Aborting.\n",__LINE__,(int)temp_rc);vTaskDelete(NULL);}}
      |                                           ^~
In file included from /home/shashwat/drone_flight_control/main/mocap.c:16:
/home/shashwat/drone_flight_control/components/micro_ros_espidf_component/include/rclc/executor.h:274:32: note: expected 'rclc_subscription_callback_t' {aka 'void (*)(const void *)'} but argument is of type 'void (*)(const phasespace_msgs__msg__Rigids *)'
  274 |   rclc_subscription_callback_t callback,
      |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~
[3/8] Linking C static library esp-idf/main/libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable drone_flight_control.elf
[6/8] Generating binary image from built executable
esptool.py vv4.8.dev1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/shashwat/drone_flight_control/build/drone_flight_control.bin
[7/8] cd /home/shashwat/drone_flight_control/build/esp-idf/esptool_py && /home/shashwat/.espressif/python_env/idf5.3_py3.10_env/bin/python /home/shashwat/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/shashwat/drone_flight_control/build/partition_table/partition-table.bin /home/shashwat/drone_flight_control/build/drone_flight_control.bin
drone_flight_control.bin binary size 0xe0790 bytes. Smallest app partition is 0x100000 bytes. 0x1f870 bytes (12%) free.
[7/8] cd /home/shashwat/esp/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/shashwat/esp/esp-idf -D "SERIAL_TOOL=/home/shashwat/.espressif/python_env/idf5.3_py3.10_env/bin/python;;/home/shashwat/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/shashwat/drone_flight_control/build -P /home/shashwat/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32 -p /dev/ttyUSB0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 drone_flight_control.bin 0x8000 partition_table/partition-table.bin
esptool.py vv4.8.dev1
Serial port /dev/ttyUSB0
Connecting......
Chip is ESP32-D0WDQ6 (revision v1.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 78:e3:6d:09:fa:28
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x000f0fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26704 bytes to 16373...
Writing at 0x00001000... (100 %)
Wrote 26704 bytes (16373 compressed) at 0x00001000 in 0.9 seconds (effective 229.3 kbit/s)...
Hash of data verified.
Compressed 919440 bytes to 570810...
Writing at 0x00010000... (2 %)
Writing at 0x0001d553... (5 %)
Writing at 0x00027ce5... (8 %)
Writing at 0x0002d6a7... (11 %)
Writing at 0x000349c1... (14 %)
Writing at 0x000407f1... (17 %)
Writing at 0x0004623d... (20 %)
Writing at 0x0004bcdf... (22 %)
Writing at 0x000522a3... (25 %)
Writing at 0x00058092... (28 %)
Writing at 0x0005dbf6... (31 %)
Writing at 0x000635cf... (34 %)
Writing at 0x00068fe5... (37 %)
Writing at 0x0006ebf8... (40 %)
Writing at 0x00074913... (42 %)
Writing at 0x0007a821... (45 %)
Writing at 0x000804ef... (48 %)
Writing at 0x000859b1... (51 %)
Writing at 0x0008ad02... (54 %)
Writing at 0x000901e2... (57 %)
Writing at 0x000954df... (60 %)
Writing at 0x0009abba... (62 %)
Writing at 0x000a03c4... (65 %)
Writing at 0x000a619e... (68 %)
Writing at 0x000aba46... (71 %)
Writing at 0x000b182f... (74 %)
Writing at 0x000b7e1f... (77 %)
Writing at 0x000bd640... (80 %)
Writing at 0x000c2f96... (82 %)
Writing at 0x000cd093... (85 %)
Writing at 0x000d4a0f... (88 %)
Writing at 0x000da824... (91 %)
Writing at 0x000e015f... (94 %)
Writing at 0x000e6322... (97 %)
Writing at 0x000ebcb5... (100 %)
Wrote 919440 bytes (570810 compressed) at 0x00010000 in 13.2 seconds (effective 555.9 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 318.5 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
